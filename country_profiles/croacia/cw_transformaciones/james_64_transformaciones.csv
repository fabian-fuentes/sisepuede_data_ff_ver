SSP_Sector,transformation_code,Function_Name,Description,Magnitude Description,Magnitude Min Limit,Magnitude Max Limit,Actual Value in strategy,Transformation,Detailed Description,Implementation
IPPU,TX:IPPU:DEC_PFCS,transformation_ippu_reduce_pfcs,"Implement the ""Reduces Other FCs"" IPPU transformation on input DataFrame df_input","scalar applied to gas emission factors by final time period (e.g., to reduce the emission factor by 90%, enter 0.1). ",0,inf,applies 0.1 to all PFC emission factors,"Implement the ""Reduces Other FCs"" IPPU transformation on input DataFrame df_input",,applies 0.1 to all PFC emission factors
IPPU,TX:IPPU:DEC_OTHER_FCS,transformation_ippu_reduce_other_fcs,"Implement the ""Reduces Other FCs"" IPPU transformation on input DataFrame df_input","scalar applied to gas emission factors by final time period (e.g., to reduce the emission factor by 90%, enter 0.1). ",0,inf,applies 0.1 to all Other Fluorinated Compound emission factors,Shifting from virgin material to recycled material (all recyclable materials),An increase in recycling from the circular economy can provide inputs in a variety of industries that have lower GHGs than the production of those same materials. ,The amount of recycled material available is determined in Circular Economy sector and is used as a substitute for virgin materials in IPPU.
IPPU,TX:IPPU:DEC_N2O,transformation_ippu_reduce_n2o,"Implement the ""Reduces N2O"" IPPU transformation on input DataFrame df_input","scalar applied to gas emission factors by final time period (e.g., to reduce the emission factor by 90%, enter 0.1). ",0,inf,reduce 0.1 N2O emissions per gdp process and reduce 0.1 N2O emissions per production process,N2O Abatement in Chemicals industry (adipic and nitric acid production),"Reduce nitrous oxide (N2O) process emissions from the chemicals industry by destroying the N2O. Applicable abatement measures include ammonia burner (avoid N2O formation), thermal decomposition or catalytic decomposition (N2O removal). ",The maximum implementation of this transformation involves abating 90% of N2O emissions from all nitric and adipic acid facilities by 2050.
IPPU,TX:IPPU:DEC_HFCS,transformation_ippu_reduce_hfcs,"Implement the ""Reduces HFCs"" IPPU transformation on input DataFrame df_input","scalar applied to gas emission factors by final time period (e.g., to reduce the emission factor by 90%, enter 0.1). ",0,inf,applies 0.1  to all HFC emission factors,F-Gas Reduction (all industries that emit F-Gases),"This transformation includes a variety of actions (e.g., substitutions with less-harmful chemicals, destruction of byproducts, gas recovery) to reduce F-Gas emissions across multiple industries and products (Sovacool et al., 2021)",The maximum implementation of this transformation involves reducing the emissions factor of F-gas per unit of product (including from both processes and use) by 85% by 2050.
IPPU,TX:IPPU:DEC_DEMAND,transformation_ippu_reduce_demand,"Implement the ""Reduce Demand"" transformations.","Float specifying decrease as proprtion of final value (e.g., a 30% reduction is entered as 0.3) OR  dictionary mapping individual categories to reductions (must be specified for each category)",0,1,0.3,"Reducing demand through material efficiency, longevity, and re-use (cement and steel)","Smarter design to reduce the required amount of material, products and buildings are designed and built to last longer, products no longer used can be reallocated to other purposes or recycled.",The maximum implementation can reduce the demand for cement production by 30% and demand for new steel (metals) compared to baseline demand in 2050b.  
Energy,TX:ENTC:DEC_LOSSES,transformation_entc_reduce_transmission_losses,"Implement the ""Reduce Transmission Losses"" ENTC transformation on input DataFrame df_input","magnitude of transmission loss in final time period as:* scalar (if `magnitude_type == ""basline_scalar""`)* final value (if `magnitude_type == ""final_value""`). minimum feasible transmission loss. If None, transmission losses can be reduced to 0",0,1,0.06,"Implement the ""Reduce Transmission Losses"" ENTC transformation on input DataFrame df_input",,0.06
Energy,TX:INEN:INC_EFFICIENCY_PRODUCTION,transformation_inen_maximize_efficiency_production,"Implement the ""Maximize Industrial Production Efficiency"" INEN transformation on input DataFrame df_input","proportional reduction in demand relative to final time period (to reduce production energy demand by 30% by the final time period, enter magnitude = 0.3).",0,1,0.4,"Implement the ""Maximize Industrial Production Efficiency"" INEN transformation on input DataFrame df_input",,0.4
Energy,TX:BASE,transformation_en_baseline,"Implement the ""Baseline"" from which other transformations deviate (ENERGY only). ","check the total minimum value shares in self.dict_entc_renewable_target_cats_max_investment; if greater than the target for the baseline, scale them proportionally; otherwise, leave them. ",,,cats_to_cap  = pp_hydropower and pp_nuclear. target_renewables_value_min = 0.15,"Implement the ""Baseline"" from which other transformations deviate (ENERGY only). ",,cats_to_cap  = pp_hydropower and pp_nuclear. target_renewables_value_min = 0.15
Energy,TX:FGTV:INC_FLARE,transformation_fgtv_maximize_flaring,"Implement the ""Maximize Flaring"" transformation"," magnitude of increase in efficiency relative to time 0 (interpreted as a magnitude change, not a scalar change).",0,1,0.8,"Implement the ""Maximize Flaring"" transformation",,0.8
Energy,TX:SCOE:DEC_DEMAND_HEAT,transformation_scoe_reduce_heat_energy_demand,"Implement the ""Reduce end-use demand for heat energy by improving building shell"" SCOE transformation on input DataFrame df_input","magnitude of reduction in heat energy demand relative final         time period (interpreted as an proportional scalar--e.g.,         an 30% in heat energy demand in the final time period is entered as         0.3).",0,inf,0.5,"Implement the ""Reduce end-use demand for heat energy by improving building shell"" SCOE transformation on input DataFrame df_input",,0.5
Energy,TX:SCOE:SHIFT_FUEL_HEAT,transformation_scoe_fuel_switch_electrify,"Implement the ""Switch to electricity for heat using heat pumps, electric stoves, etc."" INEN transformation on input DataFrame df_input",magnitude of final proportion of heat energy that is electrified for each category,,,0.95,"Implement the ""Switch to electricity for heat using heat pumps, electric stoves, etc."" INEN transformation on input DataFrame df_input",,0.95
Energy,TX:SCOE:INC_EFFICIENCY_APPLIANCE,transformation_scoe_increase_applicance_efficiency,"Implement the ""Increase appliance efficiency"" SCOE transformation on input DataFrame df_input","magnitude of increase in efficiency relative to the final time period (interpreted as an additive change to the baseline value--e.g., an increase of 0.25 in the efficiency factor relative to the final time period is entered as 0.25).",0,1,0.5,"Implement the ""Increase appliance efficiency"" SCOE transformation on input DataFrame df_input",,0.5
Energy,TX:TRDE:DEC_DEMAND,transformation_trde_reduce_demand,"Implement the ""Increase Transportation Non-Electricity Energy Efficiency""         transformation","magnitude of reduction in demand relative to the final time         period (interprted as a scalar change; i.e., enter 0.25 to reduce demand         by 25% by the final time period).",0,1,0.25,"Implement the ""Increase Transportation Non-Electricity Energy Efficiency""         transformation",,0.25
Energy,TX:TRNS:SHIFT_FUEL_LIGHT_DUTY,transformation_trns_electrify_road_light_duty,"Implement the ""Electrify Light-Duty"" TRNS transformation on input DataFrame df_input"," target magnitude of fuel mixture.  magnitude_type: type of magnitude to use. Valid types include : a) ""baseline_additive"": add the magnitude to the baseline, b)""baseline_scalar"": multiply baseline value by magnitude, c) ""final_value"": magnitude is the final value for the variable to take (achieved in accordance with vec_ramp), d) ""transfer_scalar"": apply scalar to outbound categories to calculate final transfer magnitude. ",0,1,transfer 70% of diesel + gasoline to electricity for category road_light,"Implement the ""Electrify Light-Duty"" TRNS transformation on input DataFrame df_input",,transfer 70% of diesel + gasoline to electricity for category road_light
Energy,TX:TRNS:SHIFT_FUEL_RAIL,transformation_trns_electrify_rail,"Implement the ""Electrify Rail"" TRNS transformation on input DataFrame df_input"," target magnitude of fuel mixture.  magnitude_type: type of magnitude to use. Valid types include : a) ""baseline_additive"": add the magnitude to the baseline, b)""baseline_scalar"": multiply baseline value by magnitude, c) ""final_value"": magnitude is the final value for the variable to take (achieved in accordance with vec_ramp), d) ""transfer_scalar"": apply scalar to outbound categories to calculate final transfer magnitude. ",0,1,transfer 25% of diesel + gasoline to electricity for categories rail_freight and rail_passenger,"Implement the ""Electrify Rail"" TRNS transformation on input DataFrame df_input",,transfer 25% of diesel + gasoline to electricity for categories rail_freight and rail_passenger
Energy,TX:TRNS:SHIFT_FUEL_MARITIME,transformation_trns_fuel_switch_maritime,"Implement the ""Fuel-Swich Maritime"" TRNS transformation on input DataFrame df_input"," target magnitude of fuel mixture.  magnitude_type: type of magnitude to use. Valid types include : a) ""baseline_additive"": add the magnitude to the baseline, b)""baseline_scalar"": multiply baseline value by magnitude, c) ""final_value"": magnitude is the final value for the variable to take (achieved in accordance with vec_ramp), d) ""transfer_scalar"": apply scalar to outbound categories to calculate final transfer magnitude. ",0,1,transfer 70% of diesel + gasoline to hydrogen and the 30% remaing diesel + gasoline to electricity for category water borne,"Implement the ""Fuel-Swich Maritime"" TRNS transformation on input DataFrame df_input",,transfer 70% of diesel + gasoline to hydrogen and the 30% remaing diesel + gasoline to electricity for category water borne
Energy,TX:TRNS:SHIFT_FUEL_MEDIUM_DUTY,transformation_trns_fuel_switch_road_medium_duty,"Implement the ""Fuel-Switch Medium Duty"" TRNS transformation on input DataFrame df_input"," target magnitude of fuel mixture.  magnitude_type: type of magnitude to use. Valid types include : a) ""baseline_additive"": add the magnitude to the baseline, b)""baseline_scalar"": multiply baseline value by magnitude, c) ""final_value"": magnitude is the final value for the variable to take (achieved in accordance with vec_ramp), d) ""transfer_scalar"": apply scalar to outbound categories to calculate final transfer magnitude. ",0,1,"transfer 70% of diesel + gasoline to electricity and remainder 30% to hydrogen for categories road_heavy_freight, road_heavy_regional, public","Implement the ""Fuel-Switch Medium Duty"" TRNS transformation on input DataFrame df_input",,"transfer 70% of diesel + gasoline to electricity and remainder 30% to hydrogen for categories road_heavy_freight, road_heavy_regional, public"
Energy,TX:FGTV:DEC_LEAKS,transformation_fgtv_minimize_leaks,"Implement the ""Minimize Leaks"" FGTV transformation on input DataFrame df_input",fractional magnitude of reduction in leaks relative to time 0,0,1,0.8,"Implement the ""Minimize Leaks"" FGTV transformation on input DataFrame df_input",,0.8
Circular Economy,TX:WALI:INC_TREATMENT_INDUSTRIAL,transformation_wali_improve_sanitation_industrial,"Implement the ""Improve Industrial Sanitation"" WALI transformation on input DataFrame df_input"," target allocation, across TRWW (Wastewater Treatment) categories (categories are keys), of treatment as total fraction.  * E.g., to acheive 80% of treatment from advanced anaerobic and 10% from secondary aerobic by the final time period, the following dictionary would be specified: dict_magnitude = { ""treated_advanced_anaerobic"": 0.8, ""treated_secondary_anaerobic"": 0.1 }",0,1,"treated_advanced_anaerobic = 0.8, treated_secondary_aerobic = 0.1, treated_secondary_anaerobic = 0.1","Implement the ""Improve Industrial Sanitation"" WALI transformation on input DataFrame df_input",,"treated_advanced_anaerobic = 0.8, treated_secondary_aerobic = 0.1, treated_secondary_anaerobic = 0.1"
Circular Economy,TX:WALI:INC_TREATMENT_RURAL,transformation_wali_improve_sanitation_rural,"Implement the ""Improve Rural Sanitation"" WALI transformation on input DataFrame df_input"," target allocation, across TRWW (Wastewater Treatment) categories (categories are keys), of treatment as total fraction.  * E.g., to acheive 80% of treatment from advanced anaerobic and 10% from secondary aerobic by the final time period, the following dictionary would be specified: dict_magnitude = { ""treated_advanced_anaerobic"": 0.8, ""treated_secondary_anaerobic"": 0.1 }",0,1,treated_septic = 1.0,"Implement the ""Improve Rural Sanitation"" WALI transformation on input DataFrame df_input",,treated_septic = 1.0
Circular Economy,TX:WALI:INC_TREATMENT_URBAN,transformation_wali_improve_sanitation_urban,"Implement the ""Improve Urban Sanitation"" WALI transformation on input DataFrame df_input"," target allocation, across TRWW (Wastewater Treatment) categories (categories are keys), of treatment as total fraction.  * E.g., to acheive 80% of treatment from advanced anaerobic and 10% from secondary aerobic by the final time period, the following dictionary would be specified: dict_magnitude = { ""treated_advanced_anaerobic"": 0.8, ""treated_secondary_anaerobic"": 0.1 }",0,1,"treated_advanced_aerobic = 0.3, treated_advanced_anaerobic = 0.3, treated_secondary_aerobic = 0.2, treated_secondary_anaerobic = 0.2","Implement the ""Improve Urban Sanitation"" WALI transformation on input DataFrame df_input",,"treated_advanced_aerobic = 0.3, treated_advanced_anaerobic = 0.3, treated_secondary_aerobic = 0.2, treated_secondary_anaerobic = 0.2"
Circular Economy,TX:TRWW:INC_COMPLIANCE_SEPTIC,transformation_trww_increase_septic_compliance,"Increase septic sludge compliance; produces more sludge, which can be used for fertilizer or treated similarly to any other solid waste.","dictionary mapping categories (TRWW) to viable capture fractions by the final time period OR a float. If float, applies the value uniformly to all available categories.",0,1,0.9,"Increase septic sludge compliance; produces more sludge, which can be used for fertilizer or treated similarly to any other solid waste.",,0.9
Circular Economy,TX:WASO:INC_RECYCLING,transformation_waso_increase_recycling,"Implement the ""Increase Recycling"" transformation (affects industrial production in integrated environment)",proportion of recyclable solid waste that is recycled by final time period,0,1,0.95,Diverting more recyclables,"Increasing the fraction of recyclable material that is diverted from the waste stream, recycled, and used in IPPU where it offsets the production of virgin materials.",The maximum implementation involves diverting 100% of recyclable materials by 2050. Lower levels of implementation involve less diversion by 2050.
Circular Economy,TX:WASO:DEC_CONSUMER_FOOD_WASTE,transformation_waso_decrease_food_waste,"Implement the ""Decrease Municipal Solid Waste"" WASO transformation on input DataFrame df_input","Float specifying decrease as proprtion of final value (e.g., a 30% reduction is entered as 0.3) OR  dictionary mapping individual categories to reductions (must be specified for each category)",0,1,food = 0.3,Reducing Consumer Food Waste,"Reduction in consumers’ food waste, and associated costs and benefits, are modeled in the waste sector but affect domestic demand in AFOLU. ",
Circular Economy,TX:WASO:INC_ANAEROBIC_AND_COMPOST,transformation_waso_increase_anaerobic_treatment_and_composting,"Implement the ""Increase Composting"" and ""Increase Biogas"" transformations.", proportion of organic solid waste that is treated using anaerobic treatment and proportion of organic solid waste that is treated using compost,0,1,0.475,"Implement the ""Increase Composting"" and ""Increase Biogas"" transformations.",,0.475
Circular Economy,TX:WASO:DEC_CONSUMER_FOOD_WASTE,transformation_waso_decrease_food_waste,"Implement the ""Decrease Municipal Solid Waste"" WASO transformation on input DataFrame df_input","Float specifying decrease as proprtion of final value (e.g., a 30% reduction is entered as 0.3) OR  dictionary mapping individual categories to reductions (must be specified for each category)",0,1,food = 0.3,Reducing how much waste is produced,Households’ food waste and other waste is reduced. Domestic demand for food also decreases as a result and affects agricultural production and exports in the AFOLU sector.,The maximum implementation of waste reduction involves (a) reducing consumers’ food waste by 50% by 2030 and by 75% by 2050[1] and (b) reducing other waste by 10% by 2030 and 25% by 2050. Lower levels of implementation have smaller reductions in these time frames.
Circular Economy,TX:WASO:INC_ENERGY_FROM_BIOGAS,transformation_waso_increase_energy_from_biogas,Increase use of captured biogas for energy (APPLIES TO LANDFILLS ONLY AT MOMENT),"dictionary with keys for ""landfill"" mapping to the proportion of gas generated at landfills (respectively) that is collective for energy use.If float, applies to all available biogas collection groupings.",0,1,0.85,Increase use of captured biogas for energy (APPLIES TO LANDFILLS ONLY AT MOMENT),,0.85
Circular Economy,TX:WASO:INC_ENERGY_FROM_INCINERATION,transformation_waso_increase_energy_from_incineration,Increase gas capture at anaerobic treatment and landfill facilities.," dictionary with keys for ""isw"" or ""msw"" that map to the proportion of incinerated ISW/MSW that is captured for energy OR float. If float, applies to all available incinerated groupings",0,1,0.85,Increase gas capture at anaerobic treatment and landfill facilities.,,0.85
Circular Economy,TX:WASO:INC_CAPTURE_BIOGAS,transformation_waso_increase_biogas_capture,"Implement the ""Increase Biogas Capture at Anaerobic Treatment Facilities and Landfills"" WASO transformation on input DataFrame df_input",,0,1,1.0 :  applies to both landfill and biogas,"Implement the ""Increase Biogas Capture at Anaerobic Treatment Facilities and Landfills"" WASO transformation on input DataFrame df_input",,1.0 :  applies to both landfill and biogas
Circular Economy,TX:TRWW:INC_CAPTURE_BIOGAS,transformation_trww_increase_biogas_capture,"Implement the ""Increase Biogas Capture at Wastewater Treatment Plants"" TRWW transformation on input DataFrame df_input","dictionary mapping categories (TRWW) to viable capture fractions by the final time period OR a float. If float, applies the value uniformly to all available categories.",0,1,1,"Implement the ""Increase Biogas Capture at Wastewater Treatment Plants"" TRWW transformation on input DataFrame df_input",,1
Circular Economy,TX:WASO:INC_LANDFILLING,transformation_waso_increase_landfilling,"Implement the ""Increase Landfilling"" transformation (all non-recycled, non-biogas, and non-compost waste ends up in landfills)",proportion of waste in landfills by final time period ,0,1,1,Improving landfills gas capture and flaring or reuse,Increasing the fraction of methane captured and flaring or reuse. Captured energy is input into the energy sector. ,The most aggressive implementation involves capturing and achieving 85% methane recovery and reuse in landfills. Lower levels of implementation involve less capture by 2050.
Afolu,TX:LSMM:INC_MANAGEMENT_CATTLE_PIGS,transformation_lsmm_improve_manure_management,"Implement the ""Improve Livestock Manure Management"" transformation.", Dictionary mapping LSMM categories to target fractions (total x must be 0 <= x <= 1.0),0,1,"frac_managed = 0.95, dict_lsmm_pathways = {""anaerobic_digester"": 0.625*frac_managed, ""composting"": 0.125*frac_managed, ""daily_spread"": 0.25*frac_managed}, cats to apply cattle_dairy, cattle_nondairy, pigs","Implement the ""Improve Livestock Manure Management"" transformation.",,"frac_managed = 0.95, dict_lsmm_pathways = {""anaerobic_digester"": 0.625*frac_managed, ""composting"": 0.125*frac_managed, ""daily_spread"": 0.25*frac_managed}, cats to apply cattle_dairy, cattle_nondairy, pigs"
Afolu,TX:LVST:INC_PRODUCTIVITY,transformation_lvst_increase_productivity,"Implement the ""Increase Livestock Productivity"" transformation.","Proportional increase, by final time period, in livestock carrying capacity per area of managed grassland--e.g., to increase productivity by 30%, enter 0.3. ",0,inf,0.3,Improving Livestock Productivity,"Encompasses many sector-wide improvements that increase productivity, including better feed conversion, animal health, and grazing practices. ",
Afolu,TX:LVST:DEC_ENTERIC_FERMENTATION,transformation_lvst_reduce_enteric_fermentation,"Implement the ""Reduce Enteric Fermentation"" transformation.","Float specifying decrease as proprtion of final value (e.g., a 30% reduction is entered as 0.3) OR  dictionary mapping individual categories to reductions (must be specified for each category)",0,1,"buffalo = 0.4, cattle_dairy = 0.4, cattle_nondairy = 0.4, goats = 0.56, sheep = 0.56",Reducing Enteric Fermentation,"Certain feed additives, such as propionate precursors, can inhibit enteric fermentation (EPA, 2019 and McKinsey, 2020) In addition, genetics play a meaningful role in enteric fermentation, and animals can be selected for lower emissions (McKinsey, 2020). ",
Afolu,TX:SOIL:DEC_N_APPLIED,transformation_soil_reduce_excess_fertilizer,"Implement the ""Reduce Excess Fertilizer"" transformation. Can be used to         reduce excess N from fertilizer or reduce liming. See `magnitude` in          function arguments for information on dictionary specification.","dictionary with keys for ""fertilizer_n"" and ""lime"" mapping to proportional reductions in the per unit application of fertilizer N  and lime, respectively. If float, applies to fertilizer N and lime uniformly.",0,1,fertilizer_n = 0.2,Reduce Excess Fertilizer Use,"The use of fertilizer in agriculture is the primary source of anthropogenic N2O emissions (Tian et al., 2020). The global overuse and misapplication of N2O is a significant and avoidable contributor to these emissions (McKinsey et al. 2020). This strategy targets the application of excess N (i.e., the amount of fertilizer that can be reduced without affecting yield), which is highest in countries such as China and India that subsidize fertilizer use but is also significant in Latin America (West et al., 2014). Table X.2 specifies per-hectare N input but not taken up by harvested crops, of which 10-30% could be avoided without an impact on yield.",
Afolu,TX:LNDU:INC_REFORESTATION,transformation_frst_increase_reforestation,Reduce deforestion by stopping transitions out of forest land use categories.,float specifying increase in reforestation as a fraction of final value,0,inf,0.1,Reduce deforestion by stopping transitions out of forest land use categories.,,0.1
Afolu,TX:LNDU:DEC_DEFORESTATION,transformation_frst_reduce_deforestation,Reduce deforestion by stopping transitions out of forest land use categories.,float specifying target fraction of forests that remain forests(applied to all forest categories),0,1,0.99999,Reduce deforestion by stopping transitions out of forest land use categories.,,0.99999
Afolu,TX:AGRC:DEC_LOSSES_SUPPLY_CHAIN,transformation_agrc_reduce_supply_chain_losses,"Implement the ""Reduce Supply Chain Losses"" transformation.","proportional minimum reduction, from final time period, in supply chain losses--e.g., to reduce supply chain losses by 30%, enter 0.3",0,1,0.3,Reducing Food Losses and Waste in the Supply Chain,"Reducing food waste throughout the agriculture supply chain, from on farm through production, processing, handling and storage, and distribution and marketing. Post-market waste by consumers is handled in the waste sector.",
Afolu,TX:AGRC:INC_PRODUCTIVITY,transformation_agrc_increase_crop_productivity,"Implement the ""Increase Crop Productivity"" transformation (increases yield factors)","float specifying increase as proprtion of final value (e.g., a 30% increase is entered as 0.3) OR  dictionary mapping individual categories to reductions (must be specified for each category)",0,inf,0.3,Improve Crop Productivity,"Encompasses many sector-wide improvements that increase productivity, including [finish here]. ",
Afolu,TX:AGRC:DEC_CH4_RICE,transformation_agrc_improve_rice_management,"Implement the ""Improve Rice Management"" transformation.","proportional reduction, by final time period, in methane emitted from rice production--e.g., to reduce methane from rice by 30%, enter 0.3",0,inf,0.6,Improve Rice Management,"Many practices can reduce emissions associated with growing rice, including improved water management, fertilizer practices, tillage practices, rice variety choices, residue management, and seeding practices (McKinsey, 2020; Chirinda et al., 2018).",
Afolu,TX:LNDU:INC_SILVOPASTURE,transformation_lndu_increase_silvopasture,"Increase the use of silvopasture by shifting pastures to secondary forest. NOTE: This trnsformation relies on modifying transition matrices, which can compound some minor numerical errors in the crude implementation taken here. Final area prevalences may not reflect precise shifts.",float specifying fraction of pasture to shift to silvopasture,0,inf,0.1,"Increase the use of silvopasture by shifting pastures to secondary forest. NOTE: This trnsformation relies on modifying transition matrices, which can compound some minor numerical errors in the crude implementation taken here. Final area prevalences may not reflect precise shifts.",,0.1
Afolu,TX:LVST:DEC_EXPORTS,transformation_lvst_decrease_exports,"Implement the ""Decrease Exports"" LVST transformation on input DataFrame df_input (reduce by 50%)",float specifying decrease in exports as a fraction of final value,0,inf,0.5,Decrease Exports of LVST ,Decrease Exports of LVST ,"Implement the ""Decrease Exports"" LVST transformation on input DataFrame df_input (reduce by 50%)"
Afolu,TX:AGRC:DEC_EXPORTS,transformation_agrc_decrease_exports,"Implement the ""Decrease Exports"" AGRC transformation on input DataFrame df_input (reduce by 50%)",float specifying decrease in exports as a fraction of final value,0,1,0.5,Decrease Exports of AGRC ,Decrease Exports of AGRC ,Decrease Exports of AGRC 
Afolu,TX:AGRC:INC_CONSERVATION_AGRICULTURE,transformation_agrc_expand_conservation_agriculture,"Implement the ""Expand Conservation Agriculture"" AGRC transformation on input DataFrame df_input. NOTE: Sets a new floor for F_MG (as described in in V4 Equation 2.25 (2019R)) to reduce losses of soil organic carbon through no-till in cropland + reduces removals and burning of crop residues, increasing residue covers on fields.","Set a new floor for F_MG (as described in in V4 Equation 2.25 (2019R)). Used to Implement the ""Expand Conservation Agriculture"" transformation, which reduces losses of soil organic carbon through no-till. Can be implemented in cropland and grassland.",0,inf,"cereals : 0.8, fibers : 0.8, other_annual : 0.8, pulses : 0.5, tubers : 0.5, vegetables_and_vines : 0.5","Implement the ""Expand Conservation Agriculture"" AGRC transformation on input DataFrame df_input. NOTE: Sets a new floor for F_MG (as described in in V4 Equation 2.25 (2019R)) to reduce losses of soil organic carbon through no-till in cropland + reduces removals and burning of crop residues, increasing residue covers on fields.","Implement the ""Expand Conservation Agriculture"" AGRC transformation on input DataFrame df_input. NOTE: Sets a new floor for F_MG (as described in in V4 Equation 2.25 (2019R)) to reduce losses of soil organic carbon through no-till in cropland + reduces removals and burning of crop residues, increasing residue covers on fields.","Implement the ""Expand Conservation Agriculture"" AGRC transformation on input DataFrame df_input. NOTE: Sets a new floor for F_MG (as described in in V4 Equation 2.25 (2019R)) to reduce losses of soil organic carbon through no-till in cropland + reduces removals and burning of crop residues, increasing residue covers on fields."
Afolu,TX:LNDU:PLUR,transformation_lndu_reallocate_land,Implement partial land use reallocation,Scalar applied to landuse reallocation factor,0,1,0.5,Adjust land use reallocation factor,"In the SISEPUEDE land use model, some of this surplus demand can be met endogenously (by adjusting the land use transition), while some can be met from net imports. In order to compute the quantity used to adjust the land-use transition, a Land Use Yield Reallocation Factor is used.",Adjust land use reallocation factor
Afolu,TX:LSMM:INC_MANAGEMENT_OTHER,transformation_lsmm_improve_manure_management_other,"Implement the ""Improve Livestock Manure Management for Other Animals"" transformation on the input DataFrame.",dictionary mapping LSMM categories to target fractions (total x must be 0 <= x <= 1.0),0,1,"frac_managed = 0.95 to the next lsmm pathways : ""anaerobic_digester"": 0.50*frac_managed, ""composting"": 0.25*frac_managed, ""dry_lot"": 0.125*frac_managed, ""daily_spread"": 0.125*frac_managed. The transformation is applied to the next lvst categories : ""buffalo"", ""goats"", ""horses"", ""mules"", ""sheep""","Implement the ""Improve Livestock Manure Management for Other Animals"" transformation on the input DataFrame.","Implement the ""Improve Livestock Manure Management for Other Animals"" transformation on the input DataFrame.","Implement the ""Improve Livestock Manure Management for Other Animals"" transformation on the input DataFrame."
Afolu,TX:LSMM:INC_MANAGEMENT_POULTRY,transformation_lsmm_improve_manure_management_poultry,"Implement the ""Improve Livestock Manure Management for Poultry"" transformation on the input DataFrame.",dictionary mapping LSMM categories to target fractions (total x must be 0 <= x <= 1.0),0,1,"frac_managed = 0.95 to the next lsmm pathways ""anaerobic_digester"": 0.50*frac_managed, ""poultry_manure"": 0.5*frac_managed. The transformation is applied only foy te lvst category ""chickens""","Implement the ""Improve Livestock Manure Management for Poultry"" transformation on the input DataFrame.","Implement the ""Improve Livestock Manure Management for Poultry"" transformation on the input DataFrame.","Implement the ""Improve Livestock Manure Management for Poultry"" transformation on the input DataFrame."
Afolu,TX:SOIL:DEC_LIME_APPLIED,transformation_soil_reduce_excess_lime,"Implement the ""Reduce Excess Liming"" SOIL transformation on input DataFrame df_input.","dictionary with keys for ""fertilizer_n"" and ""lime"" mapping to proportional reductions in the per unit application of fertilizer N and lime, respectively. If float, applies to fertilizer N and lime uniformly.",0,1,"""lime"": 0.2","Implement the ""Reduce Excess Liming"" SOIL transformation on input DataFrame df_input.","Implement the ""Reduce Excess Liming"" SOIL transformation on input DataFrame df_input.","Implement the ""Reduce Excess Liming"" SOIL transformation on input DataFrame df_input."
IPPU,TX:IPPU:DEC_CLINKER,transformation_ippu_reduce_cement_clinker,"Implement the ""Reduce cement clinker"" IPPU transformation on input DataFrame df_input. Reduces industrial production.",Reduce cement clinker by a specific magnitude,0,1,0.5,"Implement the ""Reduce cement clinker"" IPPU transformation on input DataFrame df_input. Reduces industrial production.","Implement the ""Reduce cement clinker"" IPPU transformation on input DataFrame df_input. Reduces industrial production.","Implement the ""Reduce cement clinker"" IPPU transformation on input DataFrame df_input. Reduces industrial production."
Energy,TX:ENTC:TARGET_RENEWABLE_ELEC,transformation_entc_renewables_target,"Implement the ""renewables target"" transformation (shared repeatability), which includes 95% renewable energy target and green hydrogen","magnitude of target to hit by 2050   OR   optional str ""VEC_FIRST_RAMP"", which will set the magnitude to the mix of renewable capacity at the first time period where VEC_FIRST_RAMP != 0",0,1,0.95,"Implement the ""renewables target"" transformation (shared repeatability), which includes 95% renewable energy target and green hydrogen","Implement the ""renewables target"" transformation (shared repeatability), which includes 95% renewable energy target and green hydrogen","Implement the ""% of electricity is generated by renewables in 2050"" transformation. Applies to both renewable (true renewable) and fossil fuel (fake renewable) transformations "
Energy,TX:INEN:INC_EFFICIENCY_ENERGY,transformation_inen_maximize_efficiency_energy,"Implement the ""Maximize Industrial Energy Efficiency"" INEN transformation on input DataFrame df_input","magnitude of increase in efficiency relative to the final time period. Interpreted as a magnitude increase in the industrial efficiency factor--e.g., to increase the efficiency factor by 0.3 by the final time period, enter 0.3.",0,1,0.3,"Implement the ""Maximize Industrial Energy Efficiency"" transformation","Implement the ""Maximize Industrial Energy Efficiency"" transformation","Implement the ""Maximize Industrial Energy Efficiency"" transformation"
Energy,TX:TRNS:SHIFT_MODE_PASSENGER,transformation_trns_mode_shift_public_private,"Implement the ""Mode Shift Passenger Vehicles to Others"" TRNS transformation on input DataFrame df_input","Transfers some quantity from categories specified within ""categories_source"" to categories ""categories_target"". ""categories_target"" is a dictionary of target categories mapping to proportions of the magnitude to receive. For example,  {     ""magnitude"" = 0.8,     ""categories_source"" = [""cat_1"", ""cat_2"", ""cat_3""],     ""categories_target"" = {""cat_4"": 0.7, ""cat_5"": 0.3} }  will distribute 0.8 from categories 1, 2, and 3 to 4 and 5, giving 0.56 to cat_4 and 0.24 to cat_5. In general, the source distribution is proportional to the source categories' implied pmf at the final time period.",0,1,"""magnitude"": 0.3, ""magnitude_type"": ""transfer_value_scalar"", ""categories_source"": [""road_light""], ""categories_target"": {""human_powered"": (1/6), ""powered_bikes"": (2/6),""public"": 0.5} ","Implement the ""Mode Shift Passenger Vehicles to Others"" TRNS transformation on input DataFrame df_input","Implement the ""Mode Shift Passenger Vehicles to Others"" TRNS transformation on input DataFrame df_input","Implement the ""Mode Shift Passenger Vehicles to Others"" TRNS transformation on input DataFrame df_input"
Energy,TX:TRNS:SHIFT_MODE_REGIONAL,transformation_trns_mode_shift_regional,"Implement the ""Mode Shift Regional Travel"" TRNS transformation on input DataFrame df_input","Transfers some quantity from categories specified within ""categories_source"" to categories ""categories_target"". ""categories_target"" is a dictionary of target categories mapping to proportions of the magnitude to receive. For example,  {     ""magnitude"" = 0.8,     ""categories_source"" = [""cat_1"", ""cat_2"", ""cat_3""],     ""categories_target"" = {""cat_4"": 0.7, ""cat_5"": 0.3} }  will distribute 0.8 from categories 1, 2, and 3 to 4 and 5, giving 0.56 to cat_4 and 0.24 to cat_5. In general, the source distribution is proportional to the source categories' implied pmf at the final time period.",0,1,"""magnitude"": 0.1, ""magnitude_type"": ""transfer_value_scalar"", ""categories_source"": [""aviation""], ""categories_target"": {""road_heavy_regional"": 1.0}","Implement the ""Mode Shift Regional Travel"" TRNS transformation on input DataFrame df_input","Implement the ""Mode Shift Regional Travel"" TRNS transformation on input DataFrame df_input","Implement the ""Mode Shift Regional Travel"" TRNS transformation on input DataFrame df_input"
Energy,TX:TRNS:SHIFT_MODE_FREIGHT,0,"Implement the ""Mode Shift Freight"" TRNS transformation on input DataFrame df_input","Transfers some quantity from categories specified within ""categories_source"" to categories ""categories_target"". ""categories_target"" is a dictionary of target categories mapping to proportions of the magnitude to receive. For example,  {     ""magnitude"" = 0.8,     ""categories_source"" = [""cat_1"", ""cat_2"", ""cat_3""],     ""categories_target"" = {""cat_4"": 0.7, ""cat_5"": 0.3} }  will distribute 0.8 from categories 1, 2, and 3 to 4 and 5, giving 0.56 to cat_4 and 0.24 to cat_5. In general, the source distribution is proportional to the source categories' implied pmf at the final time period.",0,1,"""magnitude"": 0.2, ""magnitude_type"": ""transfer_value_scalar"", ""categories_source"": [""aviation"", ""road_heavy_freight""], ""categories_target"" : ""rail_freight"": 1.0",Mode shift freight,Mode shift freight,Mode shift freight
Energy,TX:CCSQ:INC_CAPTURE,transformation_ccsq_increase_air_capture,"Implement the ""Increase Direct Air Capture"" CCSQ transformation on input DataFrame df_input",magnitude of direct air capture in final time period,0,inf,50,"Carbon Capture and Storage (CCS) for steel, cement, and other industries","The capture and storage or sequestering of CO2 is key to capturing emissions from hard-to-abate sectors where production of CO2 is an inherent part of an industrial process (Paltsey et al., 2021). This transformation accounts for process emissions only; energy emissions are accounted for in the energy sector.","At maximum, CCS is implemented for 80% of the steel, cement, and other materials produced by 2050, capturing 65%, 90%, and 50%, respectively of process emissions."
Energy,TX:ENTC:LEAST_COST_SOLUTION,transformation_entc_least_cost,"Implement the ""Least Cost"" ENTC transformation on input DataFrame df_input",final magnitude of generation capacity.,0,1,support function,"Implement the ""Least Cost"" ENTC transformation on input DataFrame df_input",,support function
Energy,TX:INEN:SHIFT_FUEL_HEAT,transformation_scoe_fuel_switch_electrify,"Implement the ""Switch to electricity for heat using heat pumps, electric stoves, etc."" INEN transformation on input DataFrame df_input",magnitude of final proportion of heat energy that is electrified for each category,,,0.95,"Implement the ""Switch to electricity for heat using heat pumps, electric stoves, etc."" INEN transformation on input DataFrame df_input",,0.95
Circular Economy,TX:LSMM:INC_CAPTURE_BIOGAS,transformation_waso_increase_biogas_capture,"Implement the ""Increase Biogas Capture at Anaerobic Treatment Facilities and Landfills"" WASO transformation on input DataFrame df_input",,0,1,1.0 :  applies to both landfill and biogas,"Implement the ""Increase Biogas Capture at Anaerobic Treatment Facilities and Landfills"" WASO transformation on input DataFrame df_input",,1.0 :  applies to both landfill and biogas
Integrated,TX:PFLO:INC_HEALTHIER_DIETS,transformation_pflo_healthier_diets,Implement Healthier diets transformation,"Transfers some quantity from categories specified within ""categories_source"" to categories ""categories_target"". ""categories_target"" is a dictionary of target categories mapping to proportions of the magnitude to receive. For example,  {     ""magnitude"" = 0.8,     ""categories_source"" = [""cat_1"", ""cat_2"", ""cat_3""],     ""categories_target"" = {""cat_4"": 0.7, ""cat_5"": 0.3} }  will distribute 0.8 from categories 1, 2, and 3 to 4 and 5, giving 0.56 to cat_4 and 0.24 to cat_5. In general, the source distribution is proportional to the source categories' implied pmf at the final time period.",0,1,"Parameters that transform the fraction of population eating read meat : ""magnitude"": 0.5. Parameters that transform the demand (elasticity) for crops demand income :  ""categories"": ""sugar_cane"", ""magnitude"": -0.2","Implement the ""Healthier Diets"" transformation on input DataFrame df_input (affects IPPU and INEN)",Reduce the fraction of the population eating red meat by 50% (equivalent to reducing total consumption by 50%) and reduce demand for sugar.,Reduce the fraction of the population eating red meat by 50% (equivalent to reducing total consumption by 50%) and reduce demand for sugar.
Energy,TX:PFLO:INC_IND_CCS,transformation_ccsq_increase_air_capture,"Implement the ""Increase Direct Air Capture"" CCSQ transformation on input DataFrame df_input",magnitude of direct air capture in final time period,0,inf,50,"Carbon Capture and Storage (CCS) for steel, cement, and other industries","The capture and storage or sequestering of CO2 is key to capturing emissions from hard-to-abate sectors where production of CO2 is an inherent part of an industrial process (Paltsey et al., 2021). This transformation accounts for process emissions only; energy emissions are accounted for in the energy sector.","At maximum, CCS is implemented for 80% of the steel, cement, and other materials produced by 2050, capturing 65%, 90%, and 50%, respectively of process emissions."
Energy,TX:TRNS:INC_EFFICIENCY_ELECTRIC,transformation_scoe_increase_applicance_efficiency,"Implement the ""Increase appliance efficiency"" SCOE transformation on input DataFrame df_input","magnitude of increase in efficiency relative to the final time period (interpreted as an additive change to the baseline value--e.g., an increase of 0.25 in the efficiency factor relative to the final time period is entered as 0.25).",0,1,0.5,"Implement the ""Increase appliance efficiency"" SCOE transformation on input DataFrame df_input",,0.5
Energy,TX:TRNS:INC_OCCUPANCY_LIGHT_DUTY,transformation_trns_increase_occupancy_light_duty,"Implement the ""Increase Vehicle Occupancy"" TRNS transformation on input DataFrame df_input","magnitude of increase in vehicle occupancy for private light vehicles relative to final time period (interpreted as a scalar change to the baseline value--e.g., a 25% increase relative to the final time period value is entered as 0.25).",0,inf,0.25,"Implement the ""Increase Vehicle Occupancy"" TRNS transformation on input DataFrame df_input",,0.25
Energy,TX:ENTC:TARGET_CLEAN_HYDROGEN,,,,,,,,,
Afolu,TX:LNDU:DEC_SOC_LOSS_PASTURES,,,,,,,,,
Energy,TX:TRNS:INC_EFFICIENCY_NON_ELECTRIC,,,,,,,,,
